<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd
       http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
       http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">

    <!-- 本文件用于配置路由解析、拦截器等Spring功能。扫描、aop、task等Spring高级特性需添加对应的xmlns和dtd约束并配置 -->

    <!-- 静态资源解析 -->
    <mvc:resources mapping="/statics/**" location="/WEB-INF/statics/"></mvc:resources>

    <!-- view解析配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- 扫描注解，注册组件 -->
    <context:component-scan base-package="com.bebetter"/>

    <!-- 启用aop配置 强制使用CGLIB代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 启用task扫描注解 -->
    <task:annotation-driven />

    <!-- 启用注解驱动，并设置@@ResponseBody格式是 text/plain;charset=UTF-8; 因为默认的是ISO-8859-1 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                        <value>multipart/form-data;charset=UTF-8</value>
                        <value>application/x-www-form-urlencoded;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--拦截器配置 :1.拦截器按照先后顺序进行拦截，所以范围大的置前 2.拦截全部请求时使用"/**"; 3.拦截应只针对controller.放过静态文件-->
    <mvc:interceptors>
        <!--直接的bean就是全局拦截 -->
        <bean class="com.bebetter.web.interceptor.InterceptorAll"></bean>
        <mvc:interceptor>
            <!--设置要拦截以及要放过的url -->
            <mvc:mapping path="/data/**"/>
            <mvc:exclude-mapping path="/data/role"/>
            <bean class="com.bebetter.web.interceptor.InterceptorData"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 强制使用UTF-8编码处理RESTful请求 -->
    <bean id="clientHttpRequestFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">
        <property name="connectTimeout" value="5000"/>
    </bean>
    <bean class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="clientHttpRequestFactory"/>
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes" value="application/json;charset=UTF-8">
                    </property>

                </bean>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>

                </bean>
            </list>
        </property>
    </bean>

    <!-- 服务器异常的返回页面 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="commonpages/exception"/>
        <property name="defaultStatusCode" value="500"/>
    </bean>
</beans>